From a2fe220bd99974cd22dd42ddfd48d3010afb1639 Mon Sep 17 00:00:00 2001
From: Zhang Heng <zhangheng@mprc.pku.edu.cn>
Date: Mon, 11 Dec 2017 15:59:13 +0800
Subject: [PATCH 2/4] fix wfi instruction

Signed-off-by: Zhang Heng <zhangheng@mprc.pku.edu.cn>

The WFI instruction can also be executed when interrupts are disabled.
The operation of WFI must be unaffected by the global interrupt bits in
mstatus (MIE/SIE/UIE) and the delegation registers [m|s|u]ideleg.
---
 target-riscv/cpu.h       | 12 ++++++++++++
 target-riscv/helper.c    |  6 ++++++
 target-riscv/op_helper.c |  1 +
 3 files changed, 19 insertions(+)

diff --git a/target-riscv/cpu.h b/target-riscv/cpu.h
index 9754760..83ebac9 100644
--- a/target-riscv/cpu.h
+++ b/target-riscv/cpu.h
@@ -146,6 +146,9 @@ typedef struct CPURISCVState {
     uint64_t mtohost;
     uint64_t timecmp;
 
+    /* temporary wfi regs*/
+    uint32_t wfi;
+
     /* physical memory protection */
     pmp_table_t pmp_state;
 #endif
@@ -304,6 +307,15 @@ static inline int cpu_riscv_hw_interrupts_pending(CPURISCVState *env)
     enabled_interrupts |= pending_interrupts & env->mideleg &
                           -s_enabled;
 
+    /*
+     * The WFI instruction can also be executed when interrupts are disabled.
+     * The operation of WFI must be unaffected by the global interrupt bits in
+     * mstatus (MIE/SIE/UIE) and the delegation registers [m|s|u]ideleg.
+     */
+    if(env->wfi){
+        enabled_interrupts = pending_interrupts;
+    }
+
     if (enabled_interrupts) {
         target_ulong counted = ctz64(enabled_interrupts); /* since non-zero */
         if (counted == IRQ_X_HOST) {
diff --git a/target-riscv/helper.c b/target-riscv/helper.c
index ba8e252..5608dbf 100644
--- a/target-riscv/helper.c
+++ b/target-riscv/helper.c
@@ -493,6 +493,12 @@ void riscv_cpu_do_interrupt(CPUState *cs)
         csr_write_helper(env, s, CSR_MSTATUS);
         set_privilege(env, PRV_M);
     }
+
+    /*
+     * temporarily remove wfi signal here.
+     */
+    env->wfi = 0;
+
     /* TODO yield load reservation  */
 #endif
     cs->exception_index = EXCP_NONE; /* mark handled to qemu */
diff --git a/target-riscv/op_helper.c b/target-riscv/op_helper.c
index 3e4276a..4f6a880 100644
--- a/target-riscv/op_helper.c
+++ b/target-riscv/op_helper.c
@@ -687,6 +687,7 @@ void helper_wfi(CPURISCVState *env)
 {
     CPUState *cs = CPU(riscv_env_get_cpu(env));
 
+    env->wfi = 1;
     cs->halted = 1;
     cs->exception_index = EXCP_HLT;
     cpu_loop_exit(cs);
-- 
2.7.4

