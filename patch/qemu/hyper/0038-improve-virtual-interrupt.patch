From 2b2e9330b51cbdf9226e8f693d4c473d386f9448 Mon Sep 17 00:00:00 2001
From: Zhang Heng <zhangheng@mprc.pku.edu.cn>
Date: Fri, 18 May 2018 10:22:39 +0800
Subject: [PATCH 38/38] improve virtual interrupt

Signed-off-by: Zhang Heng <zhangheng@mprc.pku.edu.cn>
---
 target-riscv/cpu.h       | 9 +++++++--
 target-riscv/helper.c    | 7 +++++--
 target-riscv/op_helper.c | 3 ++-
 3 files changed, 14 insertions(+), 5 deletions(-)

diff --git a/target-riscv/cpu.h b/target-riscv/cpu.h
index f9b94cb..16a35c7 100644
--- a/target-riscv/cpu.h
+++ b/target-riscv/cpu.h
@@ -396,8 +396,13 @@ static inline int cpu_riscv_hw_interrupts_pending(CPURISCVState *env)
     target_ulong sie = get_field(env->mstatus, MSTATUS_SIE);
     target_ulong s_enabled = env->virt_mode == 0 && (env->priv < PRV_S
             || (env->priv == PRV_S && sie));
-    enabled_interrupts |= pending_interrupts & env->mideleg & ~env->hideleg
-        & -s_enabled;
+    if (env->virt_mode == 1 && env->priv <= PRV_S) {
+        enabled_interrupts |= env->mip & env->bsip & env->mideleg
+            & ~env->hideleg & -s_enabled;
+    } else {
+        enabled_interrupts |= pending_interrupts & env->mideleg & ~env->hideleg
+            & -s_enabled;
+    }
     target_ulong v_enabled = env->virt_mode == 1 && (env->priv < PRV_S
             || (env->priv == PRV_S && sie));
     enabled_interrupts |= ((pending_interrupts & env->mideleg & env->hideleg)
diff --git a/target-riscv/helper.c b/target-riscv/helper.c
index d2844d4..658f7f7 100644
--- a/target-riscv/helper.c
+++ b/target-riscv/helper.c
@@ -572,8 +572,10 @@ void riscv_cpu_do_interrupt(CPUState *cs)
             hdeleg = deleg & env->hideleg;
         }
     }
+    target_ulong virt_int = (cs->exception_index & (0x70000000)) && (bit < 64)
+        && ((1UL<<bit) & env->bsip & env->mie) && !((1UL<<bit) & env->mip & env->mie);
 
-    if (env->virt_mode == 1 && env->priv <= PRV_S && bit < 64 && !((hdeleg >> bit) & 1)) {
+    if (env->virt_mode == 1 && env->priv <= PRV_S && bit < 64 && !((hdeleg >> bit) & 1) && !virt_int) {
         /* trap from virtual machine and not handled int VM */
         /* perform VM Exit */
         env->pc = env->bpc + 4;
@@ -636,7 +638,8 @@ void riscv_cpu_do_interrupt(CPUState *cs)
         }
         env->virt_mode = 0;
         tlb_flush(cs, 1);
-    } else if (env->priv <= PRV_S && bit < 64 && ((deleg >> bit) & 1)) {
+    } else if (env->priv <= PRV_S && bit < 64
+            && (((deleg >> bit) & 1) || env->virt_mode == 1 && virt_int)) {
         /* handle the trap in S-mode */
         /* No need to check STVEC for misaligned - lower 2 bits cannot be set */
         env->pc = env->stvec;
diff --git a/target-riscv/op_helper.c b/target-riscv/op_helper.c
index 58e14b7..cce6aef 100644
--- a/target-riscv/op_helper.c
+++ b/target-riscv/op_helper.c
@@ -256,7 +256,8 @@ inline void csr_write_helper(CPURISCVState *env, target_ulong val_to_write,
     case CSR_SIE: {
         target_ulong next_mie;
         if (env->virt_mode == 1 && env->priv <= PRV_S) {
-            next_mie = val_to_write;
+            next_mie = (env->mie & ~delegable_ints)
+                | (val_to_write & delegable_ints);
         } else {
             next_mie = (env->mie & ~env->mideleg)
                 | (val_to_write & env->mideleg);
-- 
2.7.4

