diff --git a/hw/riscv/htif/htif.c b/hw/riscv/htif/htif.c
index 9be5f02..e0eedef 100644
--- a/hw/riscv/htif/htif.c
+++ b/hw/riscv/htif/htif.c
@@ -393,6 +393,8 @@ HTIFState *htif_mm_init(MemoryRegion *address_space,
 #endif
         }
     }
+    error_printf("ZH_DBG: fromhost addr%lx,size%lx, tohost addr%lx,size%lx\n",
+            fromhost_addr, fromhost_size, tohost_addr, tohost_size);
 
     /* now setup HTIF device */
     HTIFState *htifstate;
diff --git a/hw/riscv/spike_v1_10.c b/hw/riscv/spike_v1_10.c
index 31eb96c..7c9effc 100644
--- a/hw/riscv/spike_v1_10.c
+++ b/hw/riscv/spike_v1_10.c
@@ -75,12 +75,16 @@ static uint64_t load_kernel(const char *kernel_filename)
 {
     uint64_t kernel_entry, kernel_high;
 
+    error_printf("ZH_DBG: before load kernel, entry %lx, high addr %lx\n",
+            kernel_entry, kernel_high);
     if (load_elf(kernel_filename, identity_translate, NULL,
                  &kernel_entry, NULL, &kernel_high,
                  /* little_endian = */ 0, ELF_MACHINE, 1, 0) < 0) {
         error_report("qemu: could not load kernel '%s'\n", kernel_filename);
         exit(1);
     }
+    error_printf("ZH_DBG: after load kernel, entry %lx, high addr %lx\n",
+            kernel_entry, kernel_high);
     return kernel_entry;
 }
 
@@ -185,6 +189,9 @@ static void riscv_spike_board_init(MachineState *machine)
     /* create device tree */
     create_fdt(s, DRAM_BASE, machine->ram_size);
 
+    error_printf("ZH_DBG: smp cpus %x, harts %x, ram size %lx\n",
+            smp_cpus, s->soc.num_harts, machine->ram_size);
+
     /* boot rom */
     memory_region_init_ram(boot_rom, NULL, "riscv_spike_board.bootrom",
                            s->fdt_size + 0x2000, &error_fatal);
diff --git a/roms/seabios b/roms/seabios
--- a/roms/seabios
+++ b/roms/seabios
@@ -1 +1 @@
-Subproject commit e2fc41e24ee0ada60fc511d60b15a41b294538be
+Subproject commit e2fc41e24ee0ada60fc511d60b15a41b294538be-dirty
diff --git a/roms/vgabios b/roms/vgabios
--- a/roms/vgabios
+++ b/roms/vgabios
@@ -1 +1 @@
-Subproject commit 19ea12c230ded95928ecaef0db47a82231c2e485
+Subproject commit 19ea12c230ded95928ecaef0db47a82231c2e485-dirty
diff --git a/vl.c b/vl.c
index eafda8d..e773056 100644
--- a/vl.c
+++ b/vl.c
@@ -4214,6 +4214,8 @@ int main(int argc, char **argv, char **envp)
 #endif
     }
 
+    error_printf("ZH_DBG: nographic%x,default:parallel%x,serial%x,monitor%x,virtcon%x,sclp%x\n",
+            nographic, default_parallel, default_serial, default_monitor, default_virtcon, default_sclp);
     if (nographic) {
         if (default_parallel)
             add_device_config(DEV_PARALLEL, "null");
@@ -4577,6 +4579,7 @@ int main(int argc, char **argv, char **envp)
 
     ds = init_displaystate();
 
+    error_printf("ZH_DBG: display_type %x\n", display_type);
     /* init local displays */
     switch (display_type) {
     case DT_CURSES:
@@ -4604,6 +4607,7 @@ int main(int argc, char **argv, char **envp)
                       vnc_init_func, NULL, NULL);
 #endif
 
+    error_printf("ZH_DBG: using_spice %x\n", using_spice);
     if (using_spice) {
         qemu_spice_display_init();
     }
@@ -4624,6 +4628,7 @@ int main(int argc, char **argv, char **envp)
         exit(1);
     }
 
+    error_printf("ZH_DBG: replay_mode %x\n", replay_mode);
     replay_start();
 
     /* This checkpoint is required by replay to separate prior clock
