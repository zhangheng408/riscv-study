diff --git a/target-riscv/helper.h b/target-riscv/helper.h
index 77385c4..e699a7b 100644
--- a/target-riscv/helper.h
+++ b/target-riscv/helper.h
@@ -72,6 +72,8 @@ DEF_HELPER_4(csrrc, tl, env, tl, tl, tl)
 #ifndef CONFIG_USER_ONLY
 DEF_HELPER_2(sret, tl, env, tl)
 DEF_HELPER_2(hret, tl, env, tl)
+DEF_HELPER_2(swap_sp, tl, env, tl)
+DEF_HELPER_2(swap_tp, tl, env, tl)
 DEF_HELPER_2(mret, tl, env, tl)
 DEF_HELPER_1(wfi, void, env)
 DEF_HELPER_1(tlb_flush, void, env)
diff --git a/target-riscv/op_helper.c b/target-riscv/op_helper.c
index be45330..a5e7e2c 100644
--- a/target-riscv/op_helper.c
+++ b/target-riscv/op_helper.c
@@ -809,7 +809,6 @@ void swap_gpr_and_background_csrs(CPURISCVState *env)
  */
 static void perform_vm_entry(CPURISCVState *env){
     env->bpc = env->pc;
-    swap_gpr_and_background_csrs(env);
     swap_foreground_background_csrs(env);
     env->virt_mode = 1;
 }
@@ -863,6 +862,24 @@ target_ulong helper_hret(CPURISCVState *env, target_ulong cpu_pc_deb)
     return retpc;
 }
 
+target_ulong helper_swap_sp(CPURISCVState *env, target_ulong sp)
+{
+    target_ulong backup_sp = env->bsp;
+
+    printd("pc %lx, sp %lx, bsp %lx\n", env->pc, sp, env->bsp);
+    printd("gpr %lx, %lx, %lx\n", env->gpr[1], env->gpr[2], env->gpr[3]);
+    env->bsp = sp;
+    return backup_sp;
+}
+
+target_ulong helper_swap_tp(CPURISCVState *env, target_ulong tp)
+{
+    target_ulong backup_tp = env->btp;
+
+    env->btp = tp;
+    return backup_tp;
+}
+
 target_ulong helper_mret(CPURISCVState *env, target_ulong cpu_pc_deb)
 {
     if (!(env->priv >= PRV_M)) {
diff --git a/target-riscv/translate.c b/target-riscv/translate.c
index c6d153e..59559b4 100644
--- a/target-riscv/translate.c
+++ b/target-riscv/translate.c
@@ -1379,10 +1379,26 @@ static void gen_system(DisasContext *ctx, uint32_t opc,
             ctx->bstate = BS_BRANCH;
             break;
         case 0x202: /* HRET */
-            gen_helper_hret(cpu_pc, cpu_env, cpu_pc);
-            tcg_gen_exit_tb(0); /* no chaining */
-            ctx->bstate = BS_BRANCH;
-            break;
+            {
+                TCGv cpu_tmp;
+
+                cpu_tmp = tcg_temp_new();
+                /* swap sp(gpr[2]) and bsp */
+                gen_get_gpr(cpu_tmp, 2);
+                gen_helper_swap_sp(cpu_tmp, cpu_env, cpu_tmp);
+                gen_set_gpr(2, cpu_tmp);
+                /* swap tp(gpr[4]) and btp */
+                gen_get_gpr(cpu_tmp, 4);
+                gen_helper_swap_tp(cpu_tmp, cpu_env, cpu_tmp);
+                gen_set_gpr(4, cpu_tmp);
+
+                tcg_temp_free(cpu_tmp);
+
+                gen_helper_hret(cpu_pc, cpu_env, cpu_pc);
+                tcg_gen_exit_tb(0); /* no chaining */
+                ctx->bstate = BS_BRANCH;
+                break;
+            }
         case 0x302: /* MRET */
             gen_helper_mret(cpu_pc, cpu_env, cpu_pc);
             tcg_gen_exit_tb(0); /* no chaining */
