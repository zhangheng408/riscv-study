diff --git a/hw/riscv/htif/htif.c b/hw/riscv/htif/htif.c
index 9be5f02..01ee36d 100644
--- a/hw/riscv/htif/htif.c
+++ b/hw/riscv/htif/htif.c
@@ -265,6 +265,9 @@ static void htif_handle_tohost_write(HTIFState *htifstate, uint64_t val_written)
     htifstate->env->mtohost = 0; /* clear to indicate we read */
     if (htifstate->env->mfromhost != 0) {
         /* raise HTIF interrupt */
+		printd("pc %lx val %lx device %x cmd %x payload %lx resp %lx fh %lx\n",
+				htifstate->env->pc, val_written, device, cmd, payload, resp,
+				htifstate->env->mfromhost);
         qemu_irq_raise(htifstate->irq);
     }
 }
@@ -325,6 +328,7 @@ static void htif_mm_write(void *opaque, hwaddr addr,
     } else if (addr == FROMHOST_OFFSET2) {
         htifstate->env->mfromhost |= value << 32;
         if (htifstate->env->mfromhost == 0x0) {
+			printd("pc %lx\n", htifstate->env);
             qemu_irq_lower(htifstate->irq);
         }
         htifstate->fromhost_inprogress = 0;
diff --git a/hw/riscv/sifive_clint.c b/hw/riscv/sifive_clint.c
index 47a7a44..ed62a46 100644
--- a/hw/riscv/sifive_clint.c
+++ b/hw/riscv/sifive_clint.c
@@ -75,10 +75,20 @@ static void sifive_clint_irq_request(void *opaque, int irq, int level)
     if(env->irq_flags & 0x10){
         env->mip |= (MIP_MEIP |
                 MIP_MEIP & env->mideleg ? MIP_SEIP : 0U);
+		if (env->virt_mode == 0 &&
+				MIP_SEIP & env->mideleg & env->hideleg) {
+			env->bsip |= MIP_SEIP;
+		}
+		printd("pc %lx raise HTIF irq\n", env->pc);
     }
     else{
         env->mip &= ~(MIP_MEIP |
                 MIP_MEIP & env->mideleg ? MIP_SEIP : 0U);
+		if (env->virt_mode == 0 &&
+				MIP_SEIP & env->mideleg & env->hideleg) {
+			env->bsip &= ~MIP_SEIP;
+		}
+		printd("pc %lx lower HTIF irq\n", env->pc);
     }
 
     if(env->mip){
diff --git a/include/qemu-common.h b/include/qemu-common.h
index 9e8b0bd..cd9e045 100644
--- a/include/qemu-common.h
+++ b/include/qemu-common.h
@@ -138,4 +138,7 @@ void page_size_init(void);
  * returned. */
 bool dump_in_progress(void);
 
+#define printd(fmt, ...)                                         \
+    fprintf(stderr, "%s/%d: " fmt, __func__, __LINE__, ##__VA_ARGS__)
+
 #endif
diff --git a/target-riscv/helper.c b/target-riscv/helper.c
index c2d689b..a2f7175 100644
--- a/target-riscv/helper.c
+++ b/target-riscv/helper.c
@@ -36,6 +36,8 @@ bool riscv_cpu_exec_interrupt(CPUState *cs, int interrupt_request)
         RISCVCPU *cpu = RISCV_CPU(cs);
         CPURISCVState *env = &cpu->env;
         int interruptno = cpu_riscv_hw_interrupts_pending(env);
+		//if(env->virt_mode)
+		//	printd("pc %lx, a0 %lx\n", env->pc, env->gpr[10]);
         if (interruptno + 1) {
             cs->exception_index = 0x70000000U | interruptno;
             riscv_cpu_do_interrupt(cs);
@@ -573,10 +575,18 @@ void riscv_cpu_do_interrupt(CPUState *cs)
         }
     }
 
+	if (fixed_cause == 0xa || fixed_cause == 0x9
+			|| fixed_cause == 0x8000000000000009)
+		printd("pc %lx cause %lx a0 %lx a7 %lx mip %lx bsip %lx\n",
+				env->pc, fixed_cause, env->gpr[10], env->gpr[17],
+				env->mip, env->bsip);
     if (env->virt_mode == 1 && bit < 64 && !((hdeleg >> bit) & 1)) {
         /* trap from virtual machine and not handled int VM */
         /* perform vm exit */
-        env->pc = env->bpc + 4;
+		//if(0)
+		printd("vm exit pc %lx -> %lx\n",
+				env->pc, env->bpc+4);
+        env->pc = env->bpc + 4;// to skip hret
         //hcause ?
         env->bpc = backup_epc;
         swap_gpr_and_background_csrs(env);
diff --git a/target-riscv/op_helper.c b/target-riscv/op_helper.c
index 0f53782..3a04ce2 100644
--- a/target-riscv/op_helper.c
+++ b/target-riscv/op_helper.c
@@ -860,6 +860,9 @@ target_ulong helper_hret(CPURISCVState *env, target_ulong cpu_pc_deb)
 
     perform_vm_entry(env);
 
+	printd("vm entry finish,pc %lx->%lx, a0 %lx, mip %lx, bsip %lx\n",
+			env->bpc, env->pc, env->gpr[10], env->mip, env->bsip);
+
     return retpc;
 }
 
@@ -891,6 +894,7 @@ void helper_wfi(CPURISCVState *env)
 {
     CPUState *cs = CPU(riscv_env_get_cpu(env));
 
+	if(env->virt_mode) printd("pc %lx\n", env->pc);
     env->wfi = 1;
     cs->halted = 1;
     cs->exception_index = EXCP_HLT;
