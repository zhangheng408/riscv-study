diff --git a/include/qemu-common.h b/include/qemu-common.h
index 9e8b0bd..cd9e045 100644
--- a/include/qemu-common.h
+++ b/include/qemu-common.h
@@ -138,4 +138,7 @@ void page_size_init(void);
  * returned. */
 bool dump_in_progress(void);
 
+#define printd(fmt, ...)                                         \
+    fprintf(stderr, "%s/%d: " fmt, __func__, __LINE__, ##__VA_ARGS__)
+
 #endif
diff --git a/target-riscv/helper.c b/target-riscv/helper.c
index 658f7f7..ff6cc8e 100644
--- a/target-riscv/helper.c
+++ b/target-riscv/helper.c
@@ -547,6 +547,8 @@ void riscv_cpu_do_interrupt(CPUState *cs)
             fixed_cause = cs->exception_index;
         }
     }
+    target_ulong pre_priv = env->priv;
+    target_ulong pre_vm = env->virt_mode;
 
     target_ulong backup_epc = env->pc;
 
@@ -682,6 +684,9 @@ void riscv_cpu_do_interrupt(CPUState *cs)
         csr_write_helper(env, s, CSR_MSTATUS);
         set_privilege(env, PRV_M);
     }
+    printd("excep %lx/%lx, pc %lx -> %lx, %lx/%lx -> %lx/%lx, int %lx/%lx/%lx/%lx, bsip %lx, bsie %lx, rtc %lx\n",
+            fixed_cause, virt_int, backup_epc, env->pc, pre_priv, pre_vm, env->priv, env->virt_mode,
+            env->mip, env->mie, env->mideleg, env->hideleg, env->bsip, env->bsie, cpu_riscv_read_rtc());
 
     /*
      * temporarily remove wfi signal here.
diff --git a/target-riscv/op_helper.c b/target-riscv/op_helper.c
index cce6aef..3c49360 100644
--- a/target-riscv/op_helper.c
+++ b/target-riscv/op_helper.c
@@ -181,6 +181,8 @@ inline void csr_write_helper(CPURISCVState *env, target_ulong val_to_write,
         break;
     }
     case CSR_MIE: {
+        printd("pc %lx, %lx/%lx, write mie %lx -> %lx\n",
+                env->pc, env->priv, env->virt_mode,env->mie, val_to_write);
         env->mie = (env->mie & ~all_ints) |
             (val_to_write & all_ints);
         break;
@@ -831,6 +833,8 @@ target_ulong helper_sret(CPURISCVState *env, target_ulong cpu_pc_deb)
     if (!(env->priv >= PRV_S)) {
         helper_raise_exception(env, RISCV_EXCP_ILLEGAL_INST);
     }
+    target_ulong zpre_priv = env->priv;
+    target_ulong zpre_vm = env->virt_mode;
 
     target_ulong retpc = env->sepc;
     if (!riscv_feature(env, RISCV_FEATURE_RVC) && (retpc & 0x3)) {
@@ -846,6 +850,9 @@ target_ulong helper_sret(CPURISCVState *env, target_ulong cpu_pc_deb)
     set_privilege(env, prev_priv);
     csr_write_helper(env, mstatus, CSR_MSTATUS);
 
+    printd("pc %lx -> %lx, %lx/%lx -> %lx/%lx, int %lx/%lx/%lx/%lx, bsip %lx, bsie %lx, rtc %lx\n",
+            env->pc, retpc, zpre_priv, zpre_vm, env->priv, env->virt_mode,
+            env->mip, env->mie, env->mideleg, env->hideleg, env->bsip, env->bsie, cpu_riscv_read_rtc());
     return retpc;
 }
 
@@ -854,6 +861,8 @@ target_ulong helper_hret(CPURISCVState *env, target_ulong cpu_pc_deb)
     if (env->priv < PRV_S || (env->priv == PRV_S && env->virt_mode == 1)) {
         helper_raise_exception(env, RISCV_EXCP_ILLEGAL_INST);
     }
+    target_ulong zpre_priv = env->priv;
+    target_ulong zpre_vm = env->virt_mode;
 
     target_ulong retpc = env->bpc;
     if (!riscv_feature(env, RISCV_FEATURE_RVC) && (retpc & 0x3)) {
@@ -865,6 +874,9 @@ target_ulong helper_hret(CPURISCVState *env, target_ulong cpu_pc_deb)
 
     perform_vm_entry(env);
 
+    printd("pc %lx -> %lx, %lx/%lx -> %lx/%lx, int %lx/%lx/%lx/%lx, bsip %lx, bsie %lx, rtc %lx\n",
+            env->pc, retpc, zpre_priv, zpre_vm, env->priv, env->virt_mode,
+            env->mip, env->mie, env->mideleg, env->hideleg, env->bsip, env->bsie, cpu_riscv_read_rtc());
     return retpc;
 }
 
@@ -873,6 +885,8 @@ target_ulong helper_mret(CPURISCVState *env, target_ulong cpu_pc_deb)
     if (!(env->priv >= PRV_M)) {
         helper_raise_exception(env, RISCV_EXCP_ILLEGAL_INST);
     }
+    target_ulong zpre_priv = env->priv;
+    target_ulong zpre_vm = env->virt_mode;
 
     target_ulong retpc = env->mepc;
     if (!riscv_feature(env, RISCV_FEATURE_RVC) && (retpc & 0x3)) {
@@ -888,6 +902,9 @@ target_ulong helper_mret(CPURISCVState *env, target_ulong cpu_pc_deb)
     set_privilege(env, prev_priv);
     csr_write_helper(env, mstatus, CSR_MSTATUS);
 
+    printd("pc %lx -> %lx, %lx/%lx -> %lx/%lx, int %lx/%lx/%lx/%lx, bsip %lx, bsie %lx, rtc %lx\n",
+            env->pc, retpc, zpre_priv, zpre_vm, env->priv, env->virt_mode,
+            env->mip, env->mie, env->mideleg, env->hideleg, env->bsip, env->bsie, cpu_riscv_read_rtc());
     return retpc;
 }
 
